{
	"React component": {
		"scope": "typescriptreact",
		"prefix": "incontrol",
		"body": [
			"import { Text } from \"@in-core\";",
			"",
			"const ${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/$1/} = () => {",
			"    return <Text>${0}</Text>;",
			"};",
			"",
			"export default ${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/$1/};",
			""
		],
		"description": "Generates a React component."
	},
	"React component with props": {
		"scope": "typescriptreact",
		"prefix": "incontrolwithprops",
		"body": [
			"import { Text } from \"@in-core\";",
			"",
			"export interface I${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/$1/}Props {}",
			"",
			"const ${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/$1/} = (props: I${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/$1/}Props) => {",
			"    return <Text>${0}</Text>;",
			"};",
			"",
			"export default ${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/$1/};",
			""
		],
		"description": "Generates a React component with props."
	},
	"Data entry react component": {
		"scope": "typescriptreact",
		"prefix": "incontroldataentry",
		"body": [
			"import { DataEntryForm, DataEntryType, useEntityDataTableContext } from \"@in-core\";",
			"import { Create, Read, Resources, Update } from \"@server/API/V1/${1:Path/To/Generated}\";",
			"",
			"const DataEntry = () => {",
			"    const createForm = Create.useForm();",
			"    const updateForm = Update.useForm();",
			"    const localization = Resources.useLocalization();",
			"    const entityDataTableContext = useEntityDataTableContext();",
			"",
			"    const form = entityDataTableContext?.innerPermission?.Id === \"Create\" ? createForm : updateForm;",
			"",
			"    return (",
			"        <DataEntryForm",
			"            form={form}",
			"            type={DataEntryType.ManualKey}",
			"            keyValues={{ ${2:Id: form.Id} }}",
			"            createApi={Create.callApi}",
			"            readApi={Read.callApi}",
			"            updateApi={Update.callApi}",
			"        >",
			"            ${3}",
			"        </DataEntryForm>",
			"    );",
			"};",
			"",
			"export default DataEntry;",
			""
		],
		"description": "Generates a data entry React component."
	},
	"Insurance product": {
		"scope": "typescriptreact",
		"prefix": "incontrolproduct",
		"body": [
			"import { Text, useEntityDataTableContext } from \"@in-core\";",
			"import { CalculateInstallments, CalculatePremium, GetDiscountsAndSurcharges } from \"@server/API/V1/Sales/Products/${1:InsuranceType}/${2:Client}/${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/$1/}\";",
			"import InsuranceProduct from \"@ui/Sales/InsuranceProduct\";",
			"import InsuranceProductStep from \"@ui/Sales/InsuranceProduct/InsuranceProductStep\";",
			"",
			"const ${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/$1/} = () => {",
			"    const entityDataTableContext = useEntityDataTableContext();",
			"    const form = CalculatePremium.useForm();",
			"    const calculateInstallmentsApi = CalculateInstallments.useApi();",
			"    const calculatePremiumApi = CalculatePremium.useApi();",
			"    const getDiscountAndSurchargesApi = GetDiscountsAndSurcharges.useApi();",
			"",
			"    return (",
			"        <InsuranceProduct",
			"            form={form}",
			"            mode={entityDataTableContext?.innerPermission?.Id as \"Create\" | \"Read\" | \"Update\"} // TODO",
			"            premiumCalculationFields={[]}",
			"            discountAndSurchargesRetriavalFields={[]}",
			"            automaticDiscountsAndSurchargesFields={[]}",
			"            calculateInstallmentsApi={calculateInstallmentsApi}",
			"            calculatePremiumApi={calculatePremiumApi}",
			"            getDiscountsAndSurchargesApi={getDiscountAndSurchargesApi}",
			"            basicCoverageId=\"BasicCoverage\"",
			"        >",
			"            <InsuranceProductStep fields={[]} text=\"Step\">",
			"                <Text>${0}</Text>",
			"            </InsuranceProductStep>",
			"        </InsuranceProduct>",
			"    );",
			"};",
			"",
			"export default ${TM_DIRECTORY/^.+[\\/\\\\]+(.*)$/$1/};",
			""
		],
		"description": "Generates an insurance product React component."
	},
}